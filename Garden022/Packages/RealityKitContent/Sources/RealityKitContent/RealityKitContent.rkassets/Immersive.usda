#usda 1.0
(
    defaultPrim = "Root"
    metersPerUnit = 1
    upAxis = "Y"
)

def Xform "Root"
{
    reorder nameChildren = ["Gizmo", "CapsuleY", "CapsuleX", "CapsuleZ"]
    def Sphere "Gizmo" (
        active = true
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        reorder nameChildren = ["DefaultMaterial", "CapsuleY", "CapsuleX", "CapsuleZ"]
        rel material:binding = </Root/Gizmo/DefaultMaterial>
        double radius = 0.1

        def Material "DefaultMaterial"
        {
            token outputs:mtlx:surface
            token outputs:realitykit:vertex
            token outputs:surface.connect = </Root/Gizmo/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

            def Shader "DefaultSurfaceShader"
            {
                uniform token info:id = "UsdPreviewSurface"
                color3f inputs:diffuseColor = (0.83137256, 0.73333335, 0.73333335) (
                    colorSpace = "srgb_displayp3"
                )
                float inputs:roughness = 0.75
                token outputs:surface
            }
        }

        def Capsule "CapsuleY" (
            active = true
            prepend apiSchemas = ["MaterialBindingAPI"]
            customData = {
                float3 rotationEulerHint = (0, 0, 0)
            }
        )
        {
            uniform token axis = "Y"
            double height = 0.4
            rel material:binding = </Root/Gizmo/CapsuleY/DefaultMaterial>
            double radius = 0.05
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (1, 1, 1)
            float3 xformOp:translate = (0, 0.2, 0)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

            def Material "DefaultMaterial"
            {
                token outputs:mtlx:surface
                token outputs:realitykit:vertex
                token outputs:surface.connect = </Root/Gizmo/CapsuleY/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                def Shader "DefaultSurfaceShader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    color3f inputs:diffuseColor = (0.003921569, 0.38039216, 0.41960785) (
                        colorSpace = "srgb_texture"
                    )
                    float inputs:roughness = 0.75
                    token outputs:surface
                }
            }
        }

        def Capsule "CapsuleX" (
            active = true
            prepend apiSchemas = ["MaterialBindingAPI"]
            customData = {
                float3 rotationEulerHint = (0, 0, 1.5707964)
            }
        )
        {
            uniform token axis = "Y"
            double height = 0.4
            rel material:binding = </Root/Gizmo/CapsuleX/DefaultMaterial>
            double radius = 0.05
            float2 ui:nodegraph:node:pos = (20, 20)
            int ui:nodegraph:node:stackingOrder = 1
            quatf xformOp:orient = (0.70710677, 0, 0, 0.7071067)
            float3 xformOp:scale = (0.99999994, 0.99999994, 0.99999994)
            float3 xformOp:translate = (0.2, 0, 0)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

            def Material "DefaultMaterial"
            {
                token outputs:mtlx:surface
                token outputs:realitykit:vertex
                token outputs:surface.connect = </Root/Gizmo/CapsuleX/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                def Shader "DefaultSurfaceShader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    color3f inputs:diffuseColor = (0.41960785, 0.003921569, 0.17254902) (
                        colorSpace = "srgb_texture"
                    )
                    float inputs:roughness = 0.75
                    token outputs:surface
                }
            }
        }

        def Capsule "CapsuleZ" (
            active = true
            prepend apiSchemas = ["MaterialBindingAPI"]
            customData = {
                float3 rotationEulerHint = (1.5707964, 0, 1.5707964)
            }
        )
        {
            uniform token axis = "Y"
            double height = 0.4
            rel material:binding = </Root/Gizmo/CapsuleZ/DefaultMaterial>
            double radius = 0.05
            float2 ui:nodegraph:node:pos = (40, 40)
            int ui:nodegraph:node:stackingOrder = 2
            quatf xformOp:orient = (0.5, 0.5, 0.5, 0.5)
            float3 xformOp:scale = (1, 1, 1)
            float3 xformOp:translate = (0, 0, 0.2)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

            def Material "DefaultMaterial"
            {
                token outputs:mtlx:surface
                token outputs:realitykit:vertex
                token outputs:surface.connect = </Root/Gizmo/CapsuleZ/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                def Shader "DefaultSurfaceShader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    color3f inputs:diffuseColor = (0.003921569, 0.17254902, 0.41960785) (
                        colorSpace = "srgb_texture"
                    )
                    float inputs:roughness = 0.75
                    token outputs:surface
                }
            }
        }
    }
}

